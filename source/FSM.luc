module trying fsm (
    input clk,  // clock
    input rst,  // reset
    input p1button[5],
    input p2button[5]
  ) {

.clk(clk){

	.rst(rst){
		fsm state(#INIT(PREP)) = {PREP,SETTLE_P1, SETTLE_P2, PLAY, SETTLE_P1_OPP, SETTLE_P2_OPP, SETTLE_SELF, WIN};
		}
	}
  var i;
  var j;
  var p1_blob;
  var p2_blob;
  var master_p1s[5][7];
  var master_p1o[5][7];
  var master_p2s[5][7];
  var master_p2o[5][7];
  var p1_onesleft;
  var p2_onesleft;
  sig p1_temp_c[5];
  sig p1_temp_r[7];
  sig p2_temp_c[5];
  sig p2_temp_r[7];

  
always{
      p1_temp_c = 5b00011;
      p1_temp_r = 7b0000011;
      p2_temp_c = 5b00011;
      p2_temp_r = 7b0000011;
      p1_blob = 0;
      p2_blob = 0;
      case(state.q){
      
      //p1 and p2 use d-pads to control blobs
      //PREP state used to set the positions of both blobs
      state.PREP:
        if((p1_blob == 0 || p1_blob == 1) && (p2_blob == 0 || p2_blob == 1)){
          case(p1button){
    				5b10000:                                      //up
    					if (p1_temp_c <= 5b01100) {
    						p1_temp_c = p1_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p1_temp_c >= 5b0110) {
    						p1_temp_c = p1_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p1_temp_r <=7b0110000) {
    						p1_temp_r = p1_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p1_temp_r >=7b0000110) {
    						p1_temp_r = p1_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
              state.d=state.SETTLE_P1;
              
          }
            
          case(p2button){
    				5b10000:                                      //up
    					if (p2_temp_c <= 5b01100) {
    						p2_temp_c = p2_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p2_temp_c >= 5b0110) {
    						p2_temp_c = p2_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p2_temp_r <=7b0110000) {
    						p2_temp_r = p2_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p2_temp_r >=7b0000110) {
    						p2_temp_r = p2_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set;
              state.d=state.SETTLE_P2;
          }
        }
        
        if(p2_blob == 2){
        case(p1button){
    				5b10000:                                      //up
    					if (p1_temp_c <= 5b01100) {
    						p1_temp_c = p1_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p1_temp_c >= 5b0110) {
    						p1_temp_c = p1_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p1_temp_r <=7b0110000) {
    						p1_temp_r = p1_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p1_temp_r >=7b0000110) {
    						p1_temp_r = p1_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
              state.d=state.SETTLE_P1;
          }
        }
        
        if(p1_blob == 2){
         case(p2button){
    				5b10000:                                      //up
    					if (p2_temp_c <= 5b01100) {
    						p2_temp_c = p2_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p2_temp_c >= 5b0110) {
    						p2_temp_c = p2_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p2_temp_r <=7b0110000) {
    						p2_temp_r = p2_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p2_temp_r >=7b0000110) {
    						p2_temp_r = p2_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
            state.d=state.SETTLE_P2;
          }
        }
           else
                state.d=state.q;  

       //append blob positions onto master arrays (4 master arrays in total - 1 per LED matrix)
       //SETTLE_P1 state used to finalise each blob for p1
      state.SETTLE_P1:
        p1_blob = p1_blob + 1;
        for (i=0;i<5;i++){
          for(j=0;j<7;j++){
          if(p1_temp_c[i] == 1 && p1_temp_r[j] == 1)
            master_p1s[i][j] = 1;                      //set blob
          }
        }
        if(p1_blob == 2 && p2_blob == 2)
            state.d=state.PLAY;
        if(p1_blob == 1){
            state.d=state.PREP;
        }
        else
            state.d=state.PREP;
    
       //append blob positions onto master arrays (4 master arrays in total - 1 per LED matrix)
       //SETTLE_P2 state used to finalise each blob for p2
      state.SETTLE_P2:
        p2_blob = p2_blob + 1;
        for (i=0;i<5;i++){
          for(j=0;j<7;j++){
          if(p2_temp_c[i] == 1 && p2_temp_r[j] == 1)
            master_p2s[i][j] = 1;                      //set blob
          }
        }
        if(p2_blob == 2 && p1_blob == 2)
            state.d=state.PLAY;
        if(p2_blob == 1){
            state.d=state.PREP;
        }
        else
            state.d=state.PREP;
        
        //when p1 and p2 have finalised both blobs (per player), game can begin!
        //PLAY state used to move & finalise p1 and p2 attacks on each other
      state.PLAY:      
      
        if(p1_blob == 0 && p2_blob == 0){
          case(p1button){
    				5b10000:                                      //up
    					if (p1_temp_c <= 5b01100) {
    						p1_temp_c = p1_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p1_temp_c >= 5b0110) {
    						p1_temp_c = p1_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p1_temp_r <= 7b0110000) {
    						p1_temp_r = p1_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p1_temp_r >= 7b0000110) {
    						p1_temp_r = p1_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
              state.d=state.SETTLE_P1_OPP;
              
          }
            
          case(p2button){
    				5b10000:                                      //up
    					if (p2_temp_c <= 5b01100) {
    						p2_temp_c = p2_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p2_temp_c >= 5b0110) {
    						p2_temp_c = p2_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p2_temp_r <=7b0110000) {
    						p2_temp_r = p2_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p2_temp_r >=7b0000110) {
    						p2_temp_r = p2_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set;
              state.d=state.SETTLE_P2;
          }
        }
        
        if(p2_blob == 1){
        case(p1button){
    				5b10000:                                      //up
    					if (p1_temp_c <= 5b01100) {
    						p1_temp_c = p1_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p1_temp_c >= 5b0110) {
    						p1_temp_c = p1_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p1_temp_r <=7b0110000) {
    						p1_temp_r = p1_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p1_temp_r >=7b0000110) {
    						p1_temp_r = p1_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
              state.d=state.SETTLE_P1_OPP;
          }
        }
        
        if(p1_blob == 1){
         case(p2button){
    				5b10000:                                      //up
    					if (p2_temp_c <= 5b01100) {
    						p2_temp_c = p2_temp_c << 1; 
    						state.d=state.PREP; }
    
    				5b01000:                                      //down 
    					if (p2_temp_c >= 5b0110) {
    						p2_temp_c = p2_temp_c >> 1;
    						state.d=state.PREP; }
    
    				5b00100:                                      //left
    					if (p2_temp_r <=7b0110000) {
    						p2_temp_r = p2_temp_r << 1; 
    						state.d=state.PREP;}
    
    				5b00010:                                      //right 
    					if (p2_temp_r >=7b0000110) {
    						p2_temp_r = p2_temp_r >> 1;
    						state.d=state.PREP; }
    
    				5b00001:                                       //set
            state.d=state.SETTLE_P2_OPP;
          }
        }
           else
              state.d=state.q;  
        
        //when p1 has chosen his position to launch attack, position is added to his attack board
        //SETTLE_P1_OPP state used to update master array for attack board
      state.SETTLE_P1_OPP:
        p1_blob = 1;
        for(i=0;i<5;i++){
          for(j=0;j<7;j++){
          if(p1_temp_c[i] == 1 && p1_temp_r[j] == 1)
            master_p1o[i][j] = 5;                    //assume its a miss
          }
        }
        if(p2_blob == 1)
            state.d=state.SETTLE_SELF;
        else
            state.d=state.PLAY;
        
       //when p2 has chosen his position to launch attack, position is added to his attack board
       //SETTLE_P2_OPP state used to update master array for attack board
      state.SETTLE_P2_OPP:
        p2_blob = 1;
         for(i=0;i<5;i++){
          for(j=0;j<7;j++){
          if(p2_temp_c[i] == 1 && p2_temp_r[j] == 1)
            master_p2o[i][j] = 5;                  //assume its a miss
          }
        }
        if(p1_blob == 1)
            state.d=state.SETTLE_SELF;
        else
            state.d=state.PLAY;
        
        
        //when p1 and p2 have finalised their attacks, can reveal result to their opponents
        //SETTLE_SELF state used to update effects of attack on players' main boards
      state.SETTLE_SELF:
      p1_onesleft = 0; //initialise everytime we come to this state
      p2_onesleft = 0;
      
        for(i=0;i<5;i++){
          for(j=0;j<7;j++){
            if(master_p1o[i][j] == 5 && master_p2s[i][j] == 1){ //hit on p2s=2
              master_p2s[i][j]=2;
              master_p1o[i][j]=4;
            }
            
            if(master_p1o[i][j] == 5 && master_p2s[i][j] == 0){ //miss on p2s=3
              master_p2s[i][j]=3;
              master_p1o[i][j]=5;
            }
              
            if(master_p2o[i][j] == 5 && master_p1s[i][j] == 1){ //hit on p1s=2
              master_p1s[i][j]=2;
              master_p2o[i][j]=4;
            }
            
            if(master_p2o[i][j] == 5 && master_p1s[i][j] == 0){ //miss on p1s=3
              master_p1s[i][j]=3;
              master_p2o[i][j]=5;
            }
            
            if(master_p1s[i][j] == 1)
              p1_onesleft = p1_onesleft + 1;
            
            if(master_p2s[i][j] == 1)
              p2_onesleft = p2_onesleft + 1;
              
            if (p1_onesleft != 0 && p2_onesleft != 0)
              state.d=state.PLAY;
          }
        }
            
            if(p1_onesleft==0){ //p1 wins!
              for(i=0;i<5;i++){
                for(j=0;j<7;j++){
                  master_p1o[i][j]=0;
                  master_p1s[i][j]=1;
                  master_p2o[i][j]=0;
                  master_p2s[i][j]=3;
                }
              }
              state.d=state.WIN;
            }
            
            if(p2_onesleft==0){ //p2 wins!
              for(i=0;i<5;i++){
                master_p1o[i][j]=0;
                master_p1s[i][j]=3;
                master_p2o[i][j]=0;
                master_p2s[i][j]=1;
              }
            }
              state.d=state.WIN;
      
      //reached end state!
      state.WIN:
        state.d=state.q;
    }
  }
}
